@model CateringService.Web.ViewModels.MenuVM

@{
	ViewData["Title"] = "Menu";
}

@if (Model.MenuDto.FoodItems.Any())
{
	<div class="text-center">
		<h1><b>The Menu</b></h1>
	</div>
	<hr />

	<div class="menu">
		@foreach (var category in Model.Categories)
		{
			<div class="text-center">
				<h2><b>@category</b></h2>
			</div>
			<hr class="dashed-line" />
			foreach (var item in Model.MenuDto.FoodItems.Where(f => f.Category!.Name == category))
			{
				<div class="item">
					<h2>@item.Name <span class="w3-right w3-tag w3-dark-grey w3-round">@item.Price.ToString("c")</span></h2>
					<p class="w3-text-grey">@item.Description</p>
					<button id="@item.Id" price="@item.Price" class="add-button">+</button>
				</div>
			}
		}
		<button class="submit-button">Place Order</button>
	</div>
}
else
{
	<div class="row">
		<div class="col-md-6 offset-3 text-center">
			<h2>No Menu For Today Yet!</h2>
			<hr />
		</div>
	</div>
}

@section Styles{
	<style>
		/*body {
							font-family: Arial, sans-serif;
						}
						h1 {
							font-size: 36px;
							text-align: center;
							margin-bottom: 20px;
						}

						.item {
							margin-bottom: 20px;
							padding: 10px;
							border: 1px solid #ddd;
							border-radius: 5px;
							display: flex;
							justify-content: space-between;
						}

						.name {
							font-weight: bold;
						}

						.description {
							margin-top: 5px;
							margin-bottom: 10px;
						}

						.price {
							margin: 10px;
							margin-top: 25px;
							position: relative;
							font-size: 18px;
							font-weight: bold;
						}

						.category {
							display: flex;
							justify-content: center;
							align-items: center;
							padding: 0 10px;
							line-height: 1.5em;
						}

						h1,
						h2,
						h3,
						h4,
						h5,
						h6 {
							font-family: "Amatic SC", sans-serif
						}*/

		.dashed-line {
			border: none;
			border-top: 2px dotted #f00;
			color: #fff;
			background-color: #fff;
			height: 1px;
			width: 80%;
			margin-left: 10%;
		}

		.menu {
			border: 1px solid #ddd;
			border-radius: 5px;
		}

		.item {
			margin: 20px;
			padding: 10px;
			/*border: 1px solid #ddd;*/
			border-radius: 5px;
			/*display: flex;*/
			/*justify-content: space-between;*/
		}

		.add-button {
			margin: 0px;
			/*margin-top: 20px;
							margin-bottom: 20px;
							margin-left: 20px;*/
			background-color: #337ab7;
			color: #fff;
			border: none;
			/*padding: 10px 20px;*/
			border-radius: 5px;
			cursor: pointer;
			float: right;
		}

			.add-button.added {
				background-color: transparent;
				color: #6c757d;
				border: 1px solid #6c757d;
			}

		.submit-button {
			margin-top: 10px;
			background-color: #337ab7;
			color: #fff;
			border: none;
			font-size: 14px;
			padding: 3px 8px;
			border-radius: 5px;
			cursor: pointer;
		}

			.submit-button:hover {
				background-color: #23527c;
			}

	</style>
	}
@section Scripts{
	<script>
		$(document).ready(function () {
			var vm = {
				details: []
			};
			var id;
			var qty = 1;
			var price;

			$('.add-button').click(function () {
				$(this).text('Added').attr('disabled', true).toggleClass('added');

				id = $(this).attr('id');
				price = $(this).attr('price');
				vm.details.push({ foodItemId: id, quantity: qty, price: price });
			});
			$('.submit-button').click(function () {
				$('.item-button').text('+').attr('disabled', false).toggleClass('added');
				$.ajax({
					url: "/api/orders/",
					method: "post",
					data: JSON.stringify(vm),
					contentType: "application/json"
				})
					.done(function () {
						toastr.success("Order placed.");
					})
					.fail(function () {
						toastr.error("Something unexpected happened.");
					});
				vm.details = [];
			});
		});
	</script>
	}